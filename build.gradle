buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        gradlePluginPortal()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:6.0.8'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0.0'
group = 'sh.tinywifi.quietlogs'
base {
    archivesName = 'quietlogs'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.20.1'
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            
            mods {
                quietlogs {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.2.0'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

processResources {
    inputs.property "version", project.version
    
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand "version": project.version
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "quietlogs",
            "Specification-Vendor": "tinywifi", 
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": project.jar.archiveVersion,
            "Implementation-Vendor": "tinywifi",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "quietlogs.mixins.json"
        ])
    }
}

mixin {
    add sourceSets.main, "quietlogs.refmap.json"
    config "quietlogs.mixins.json"
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}